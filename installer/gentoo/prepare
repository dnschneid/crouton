#!/bin/sh -e
# Copyright (c) 2013 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# This is a distro-specific continuation of the prepare.sh script.

#PKGEXT='deb'
DISTROAKA='funtoo'


# install_dist: see install() in prepare.sh for details.
install_dist() {
    local pkgs='' params=''
    if [ "$1" = '--minimal' ]; then
        params='--oneshot'
        shift
    fi
    while [ ! "$#" = 0 ]; do
        if [ "$1" = '--' ]; then
            shift
            break
        fi
        pkgs="$pkgs $1"
        shift
    done
    emerge --autounmask-write --newuse -qu --jobs=$((`cat /proc/cpuinfo | grep "model name" | wc -l` + 1)) $params $pkgs  && dispatch-conf && emerge --newuse -qu --jobs=$((`cat /proc/cpuinfo | grep "model name" | wc -l` + 1)) $params $pkgs 
}


# install_pkg_dist: see install_pkg() in prepare.sh for details.
install_pkg_dist() {
    local params=''
    if [ "$1" = '--minimal' ]; then
        params='--oneshot'
        shift
    fi
#    if [ ! "$#" = 0 ]; then
#        dpkg --force-depends -i "$@"
#    fi
#    apt-get -fy $params install
}


# remove_dist: see remove() in prepare.sh for details.
remove_dist() {
    emerge -C "$@"
}


# list_uninstalled_dist: see list_uninstalled() in prepare.sh for details.
list_uninstalled_dist() {
    local suffix="$1" pkg
    shift
    for pkg in "$@"; do
        if ! dpkg-query -s "$pkg" 2>/dev/null >/dev/null; then
            echo -n "$pkg$suffix "
        fi
    done
}


# Bootstrap portage
emerge --sync
#Set MAKEOPTS and jobs based on processor cores
if ! `/bin/grep -q 'MAKEOPTS' /etc/portage/make.conf`; then
    echo "MAKEOPTS=\"-j$((`cat /proc/cpuinfo | grep "model name" | wc -l` + 1))\"" >> /etc/portage/make.conf
fi

# Update portage
install --minimal portage

# Fix the keyboard mode early on (this will be called again after dist-upgrade).
fixkeyboardmode
