#!/bin/sh -e
# Copyright (c) 2016 The crouton Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# This is a distro-specific bootstrap script, sourced from main.sh, and as such
# has access to all of the variables set by main.sh, namely $tmp (the temporary
# directory), $INSTALLERDIR/$DISTRO, $RELEASE, $BOOTSTRAP_RELEASE (if different
# from $RELEASE), $ARCH, and $MIRROR.

# Grab a known good release of debootstrap
# TODO(#3713): Figure out why >= 1.0.92~bpo9+1 is broken
debootstrap_version="1.0.92~bpo9+1"

echo "Downloading debootstrap ${debootstrap_version}..." 1>&2
if [ "${debootstrap_version}" = "HEAD" ]; then
    d='https://anonscm.debian.org/gitweb/?p=d-i/debootstrap.git;a=snapshot;h=HEAD;sf=tgz'
else
    base='http://httpredir.debian.org/debian/pool/main/d/debootstrap'
    d="${base}/debootstrap_${debootstrap_version}.tar.gz"
fi

if ! curl -f -# -L --connect-timeout 60 --retry 2 "$d" \
        | tar -C "$tmp" --strip-components=1 -zx 2>/dev/null; then
    error 1 'Failed to download debootstrap.
Check your internet connection or proxy settings and try again.'
fi

# Patch debootstrap so that it retries downloading packages
echo 'Patching debootstrap...' 1>&2
if awk '
    t == 3 && /warning RETRY/ { print "sleep 1"; t=4 }
    t == 2 && /-z \"\$checksum\"/ { sub(/\$checksum/, "$checksum$failed"); t=3 }
    t == 1 { if (/if \[/) { sub(/if \[/, "elif ["); t=2 } else { exit 1 } }
    /if ! just_get \"\$from\" \"\$dest2\"; then continue 2; fi/ {
        sub(/if !/, "failed=; if !")
        sub(/continue 2; fi/, "failed=y")
        t=1
    }
    1
    END { if (t != 4) exit 1 }
        ' "$tmp/functions" > "$tmp/functions.new"; then
    mv -f "$tmp/functions.new" "$tmp/functions"
else
    rm -f "$tmp/functions.new"
    echo "Unable to patch debootstrap, moving on..." 1>&2
fi

# Patch debootstrap so that is does not create devices under /dev (issue #2387).
sed -i -e 's/^setup_devices () {$/\0 return 0/' "$tmp/functions"

# Patch debootstrap to use curl instead of wget
# Note that we do not translate other parameter, and lose the progress bar, but
# we do not use these anyway.
sed -i -e 's/wgetprogress\(.*\) -O "$dest"/curl\1 -f -L -o "$dest"/' "$tmp/functions"

# Add the necessary debootstrap executables
newpath="$PATH:$tmp"
cp "$INSTALLERDIR/$DISTRO/ar" "$INSTALLERDIR/$DISTRO/pkgdetails" "$tmp/"
chmod 755 "$tmp/ar" "$tmp/pkgdetails"

# debootstrap wants a file to initialize /dev with, but we don't actually
# want any files there. Create an empty tarball that it can extract.
tar -czf "$tmp/devices.tar.gz" -T /dev/null

# There is no bootstrap script for some distros derived from Debian. Thus we use
# the scripts for matching upstream distros to bootstrap the derived distros.
if [ ! -f "$tmp/scripts/$RELEASE" ]; then
    ln -s "$tmp/scripts/$BOOTSTRAP_RELEASE" "$tmp/scripts/$RELEASE"
fi

# Grab the release and drop it into the subdirectory
echo 'Downloading bootstrap files...' 1>&2
if ! PATH="$newpath" DEBOOTSTRAP_DIR="$tmp" $FAKEROOT \
        "$tmp/debootstrap" --foreign --extractor='ar' --arch="$ARCH" \
        "$RELEASE" "$tmp/$subdir" "$MIRROR" 1>&2; then
    echo "debootstrap error log:" 1>&2
    tail -n 3 "$tmp/$subdir/debootstrap/debootstrap.log" 1>&2 || true
    error 1 'Failed to run debootstrap.'
fi

