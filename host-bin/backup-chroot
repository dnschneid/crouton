#!/bin/sh -e
# Copyright (c) 2013 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# created by edge226. To be used with crouton.

set -e

## defines the usage of the program.
usage="
Name:             backup-chroot.

Description:      Needs root access for everything but displaying this message.
                  backup-chroot will by default create:
                  ~/Downloads/crouton-backups/name/name-yyyymmdd-hhmm.tar.gz.  
                  Whether you just send backup-chroot a chroot name or a mix of
                  chroot name and target and/or filename.
                  The above date format will be refered to as date in this file.
                  
Requires:         edit-chroot
                  
    
Usage:            backup-chroot <options> name

Options:
    -h or --help  This will show this message as well as calling backup-chroot.
                  
                  
                  
    -t target     This will set the target to something other than the default.
                  Changing the target but not the file name will cause the file
                  name to be automatically generated in the form of name-date.tar.gz
                  

    -f filename   This will change the filename, setting a pure .tar will force
                  the program not to use compression. You can also force
                  other compression algorithms such as .bz2 or .xz however I do
                  not recommend it. There is no compression gain vs gzip in my
                  experiences, they just take longer. Changing the file name but
                  not the target will cause the target to be automatically generated
                  in the form of ~/Downloads/crouton-backups/name/
                  
Examples:         This is everything this script will do at this time:
                  sudo backup-chroot
                  sudo backup-chroot sid                      
                  sudo backup-chroot -f sid-e18.tar.gz sid
                  sudo backup-chroot -t ~/Downloads sid
                  sudo backup-chroot -f sid.tar -t ~/Downloads sid
                  sudo backup-chroot -t ~/Downloads -f sid.tar.gz sid"
          
## setting defaults
default_target="/home/chronos/user/Downloads/crouton-backups/"
date="`date '+%Y%m%d-%H%M'`"

## This if loop sets the initial parameters of what is allowed in this command.
if [ ! "$1" = '' ] && [ "$2" = '' ] || [ "$1" = '-t' ] || [ "$1" = '-f' ] && 
    [ "$3" = '-t' ] || [ "$3" = '-f' ] || [ "$3" = '' ] && [ "$6" = '' ]; then
  for i in $@  ## This for loop sets parameters of the target directory and filename.
  do
  if [ ! "$i" = '' ]; then ## This means that $name will be the only entry and to automate the backup.
    name="$i" # This always sets the name variable as the last iteration.
    if [ ! "$target" = '-t' ] || [ ! "$i" = '-t' ] && ## automatic setup for if only a name is provided.
        [ ! "$filename" = '-f' ] || [ ! "$i" = '-f' ]; then
     filename="$name-$date.tar.gz" # tar.gz comprssion, I've found this works best.
     target="$default_target""$name"
    elif [ "$filename" = '-f' ]; then ## This sets the filename.
      filename="$i"
      if [ ! "$target" = '-t']; then ## This sets the target only if the user did not select one.
        target="$default_target$name" 
      fi
    elif [ "$target" = '-t' ]; then ## This sets the target.
      target="$i"
      if [ ! "$filename" = '-f' ]; then ## This sets the filename only if the user did not select one.
        filename="$name-$date.tar.gz"
      fi
    elif [ "$i" = '-f' ]; then ## redirects to set the filename on the next pass.
      filename="$i"
    elif [ "$i" = '-t' ]; then ## redirects to set the target on the next pass.
      target="$i"
    else
     echo "$usage #1"
     exit 0
    fi
  fi
  done
else
  echo "$usage #2"
  exit 0
fi
if [ ! $filename = '' ] || [ ! $target = '' ] || [ ! $name = '' ]; then
  mkdir -p "$target"                                                      ## create the target
  edit-chroot -f "$target$filename" -b "$name"                         ## backup the chroot.
  exit 0
else
 echo "$usage
 
 You entered a blank or invalid name, Target directory or filename."
 exit 0
fi
