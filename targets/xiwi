#!/bin/sh -e
# Copyright (c) 2017 The crouton Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.
REQUIRES='audio extension'
PROVIDES='x11'
DESCRIPTION='X.org X11 backend running unaccelerated in a Chromium OS window.'
HOSTBIN='startxiwi'
CHROOTBIN='croutoncycle croutonfindnacl croutontriggerd croutonxinitrc-wrapper setres xinit xiwi'
CHROOTETC='xbindkeysrc.scm xiwi.conf xorg-dummy.conf xserverrc xserverrc-xiwi xserverrc-local.example xorg-dummy.patch'
. "${TARGETSDIR:="$PWD"}/common"

### Append to prepare.sh:
XMETHOD="${XMETHOD:-xiwi}"

ltspackages=''
# On non-ARM precise, install lts-trusty xorg server for compatibility with xorg
# if kernel version != 3.4 (lts-trusty mesa requires version >=3.6)
if [ "${ARCH#arm}" = "$ARCH" ] && release -eq precise \
        && ! uname -r | grep -q "^3.4."; then
    # We still install xorg later to pull in its dependencies
    ltspackages='-lts-trusty'
    install --minimal "xserver-xorg$ltspackages" "libgl1-mesa-glx$ltspackages"
fi

# Unhold xserver-xorg-video-dummy to make sure deps are pulled in
if [ "${DISTROAKA:-"$DISTRO"}" = 'debian' ]; then
    apt-mark unhold xserver-xorg-video-dummy$ltspackages || true 2>/dev/null
fi

if [ "${DISTROAKA:-"$DISTRO"}" = 'gentoo' ]; then
    # Configure a user patch for the xorg-dummy patch
    mkdir -p /etc/portage/patches/x11-drivers/xf86-video-dummy
    ln -sf /etc/crouton/xorg-dummy.patch /etc/portage/patches/x11-drivers/xf86-video-dummy/xorg-dummy.patch

    # These flags are common to xiwi and xorg and should be kept in sync
    # They must be set early, so we can't put them in x11-common
    set_flags X guile networking
    set_package_flag app-text/xmlto text x11-common

    # Set video card and input devices
    set_use_expand VIDEO_CARDS dummy
    set_use_expand INPUT_DEVICES evdev
    set_use_expand INPUT_DEVICES synaptics
    set_use_expand INPUT_DEVICES wacom
    
    # We remove the suid bit because it breaks LD_PRELOAD'ing libcroutonfreon.so
    set_package_flag x11-base/xorg-server -suid xorg
    # Install xorg
    install xorg-x11 xorg-server
    # Set the flags for i3 and install it
    set_flags xcb xkb
    install i3
else
    install xorg xserver-xorg-video-dummy$ltspackages
    install --minimal i3
fi

# Remove some unsupported options on old versions of i3
if release -le precise; then
     sed -i '/#.*#.*#.*#/s/ #......$//;/--release/d' /etc/crouton/xiwi.conf
fi

# Compile croutonfbserver
compile fbserver '-lX11 -lXfixes -lXdamage -lXext -lXtst' \
    gentoo=x11-libs/libX11,libx11-dev gentoo=x11-libs/libXfixes,libxfixes-dev \
    gentoo=x11-libs/libXdamage,libxdamage-dev gentoo=x11-libs/libXext,libxext-dev \
    gentoo=x11-libs/libXtst,libxtst-dev
compile findnacld ''

ln -sf /etc/crouton/xorg-dummy.conf /etc/X11/

if [ "${DISTROAKA:-"$DISTRO"}" != 'gentoo' ]; then
    # Download the latest xf86-video-dummy package
    urlbase="https://xorg.freedesktop.org/releases/individual/driver"

    DUMMYBUILDTMP="`mktemp -d crouton-cras.XXXXXX --tmpdir=/tmp`"

    addtrap "rm -rf --one-file-system '$DUMMYBUILDTMP'"

    echo "Download Xorg dummy driver..." 1>&2

    superinsecure=''
    if release -le wheezy; then
        # Wheezy doesn't have the right CA in ca-certificates that validates x.org
        superinsecure='--no-check-certificate'
    fi
    wget $superinsecure -O "$DUMMYBUILDTMP/dummy.tar.gz" \
        "$urlbase/xf86-video-dummy-0.3.8.tar.gz"

    install --minimal --asdeps patch gcc libc-dev pkg-config \
        xserver-xorg-dev$ltspackages x11proto-xf86dga-dev

    (
        cd "$DUMMYBUILDTMP"
        # -m prevents "time stamp is in the future" spam
        tar --strip-components=1 -xmf dummy.tar.gz

        echo "Patching Xorg dummy driver (xrandr 1.2 support)..." 1>&2
        patch -p1 < /etc/crouton/xorg-dummy.patch

        # Fake version 0.3.9
        package="xf86-video-dummy"
        major='0'
        minor='3'
        patch='9'
        version="$major.$minor.$patch"

        sed -e '
            s/#undef \(HAVE_.*\)$/#define \1 1/
            s/#undef \(USE_.*\)$/#define \1 1/
            s/#undef \(STDC_HEADERS\)$/#define \1 1/
            s/#undef \(.*VERSION\)$/#define \1 "'$version'"/
            s/#undef \(.*VERSION_MAJOR\)$/#define \1 '$major'/
            s/#undef \(.*VERSION_MINOR\)$/#define \1 '$minor'/
            s/#undef \(.*VERSION_PATCHLEVEL\)$/#define \1 '$patch'/
            s/#undef \(.*PACKAGE_STRING\)$/#define \1 "'"$package $version"'"/
            s/#undef \(.*PACKAGE_*\)$/#define \1 "'$package'"/
        ' config.h.in > config.h

        echo "Compiling Xorg dummy driver..." 1>&2

        cd src
        # Convert Makefile.am to a shell script, and run it.
        {
            echo '
                DGA=1
                CFLAGS="-std=gnu99 -O2 -g -DHAVE_CONFIG_H -I.. -I."
                XORG_CFLAGS="'"`pkg-config --cflags xorg-server`"'"
            '

            convert_automake

            echo '
                buildlib dummy_drv
            '
        } | sh -s -e $SETOPTIONS

        echo "Installing Xorg dummy driver..." 1>&2

        DRIVERDIR="/usr/lib/xorg/modules/drivers"
        mkdir -p "$DRIVERDIR/"
        /usr/bin/install -s dummy_drv.so "$DRIVERDIR/"
    ) # End compilation subshell

    # Hold xserver-xorg-video-dummy to make sure the driver does not get erased
    apt-mark hold xserver-xorg-video-dummy$ltspackages
fi

TIPS="$TIPS"'
You can open your running chroot desktops by clicking on the extension icon.
Once in a crouton window, press fullscreen or the "switch window" key to switch
back to Chromium OS.

You can launch individual apps in crouton windows by using the "xiwi" command
in the chroot shell. Use startxiwi to launch directly from the host shell.
Use the startxiwi parameter -b to run in the background.
Example: sudo startxiwi -b xterm
'

### append x11-common
